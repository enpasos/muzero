muzero:
  activeGame: GO_5
  run: none
  games:
    GO_5:
      modelName: MuZero-Go-5
      outputDir: ./memory/go5/
      values: [ -25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25 ]
      komi: 0.5
      maxKomi: 6.5
      size: 5
      boardHeight: 5 # size
      boardWidth: 5 # size
      actionSpaceSize: 26  # size * size + 1,  place a stone on the board or pass
      numParallelGamesPlayed: 250
      numEpisodes: 4

      # general
      gameClassName: ai.enpasos.muzero.go.config.GoGame
      actionClassName: ai.enpasos.muzero.go.config.GoAction
      playerMode: TWO_PLAYERS
      valueHeadType: EXPECTED # DISTRIBUTION
      networkWithRewardHead: false
      withRewardHead: false
      absorbingStateDropToZero: false
      inferenceDeviceType: GPU

      # game/environment
      maxMoves: 10000


      # network sizing
      numObservationLayers: 17  # 8 history * 2 player + 1 color of next player
      numActionLayers: 1
      numHiddenStateChannels: 19 # squeezing the hidden state from c to observationLayers + 2


      # network training
      symmetryType: SQUARE
      numberOfTrainingStepsPerEpoch: 100
      # windowValueSelfconsistencySize: 30000   <- postponed
      batchSize: 128
      numUnrollSteps: 5
      tdSteps: 10000 # here equals max moves
      discount: 1.0
      # loss details
      weightDecay: 0.0001
      # network training - adam optimizer
      lrInit: 0.0001

      # play
      numberTrainingStepsOnStart: 0 # 2000

      knownBoundsType: FROM_VALUES


      gameBufferWritingFormat: ZIPPED_PROTOCOL_BUFFERS # alternative: ZIPPED_JSON


      # Gumbel MuZero parameters
      initialGumbelM: 8
      cVisit: 50  # 50 in paper
      cScale: 1.0  # 1.0 in paper

      numSimulations: 50

      numChannels: 192     # 256 in the paper
      numBottleneckChannels: 96
      numResiduals: 12
      broadcastEveryN: 8  # broadcasting block in every 8th layer


      surpriseHandlingOn: false # false in paper
      extraValueTrainingOn: false # false in paper

      valueLossWeight: 5.0

      maxGameLiveTime: 10000000  # or 40000
      surpriseCheckInterval: 50000

      # dirichlet noise on root node helps to explore the game tree where the policy is temporarily underestimating some moves
      # dirichlet noise is added before mcts
      rootDirichletAlpha: 1.0
      rootExplorationFraction: 0.25

      # temperatureRoot applies a temperature to the policy target after mcts and after storing it in game statistics but
      # before drawing the action from the policy target (a little different from the paper)
      # it helps to explore the game tree where the policy rules out bad moves and makes the agent blind to what could happen after such a move
      temperatureRoot: 1.0

      windowSize: 10000
      numberOfTrainingSteps: 100000
