muzero:
  activeGame: GO_5
  run: none
  games:
    GO_5:
      modelName: MuZero-Go-5
      outputDir: ./build/goTest/
      valueInterval: [ -25,25 ]
      komi: 0.5
      maxKomi: 6.5
      size: 5
      boardHeight: 5 # size
      boardWidth: 5 # size
      actionSpaceSize: 26  # size * size + 1,  place a stone on the board or pass


      # general
      gameClassName: ai.enpasos.muzero.go.config.GoGame
      actionClassName: ai.enpasos.muzero.go.config.GoAction
      playerMode: TWO_PLAYERS
      networkWithRewardHead: false
      inferenceDeviceType: GPU

      # game/environment
      maxMoves: 10000


      # network sizing
      numObservationLayers: 17  # 8 history * 2 player + 1 color of next player
      numActionLayers: 1


      # network training
      symmetryType: SQUARE
      numberOfTrainingStepsPerEpoch: 100
      batchSize: 12
      numUnrollSteps: 5
      # tdSteps: 10000 # here equals max moves
      discount: 1.0
      # loss details
      weightDecay: 0.0001
      # network training - adam optimizer
      lrInit: 0.0001

      # play
      numberTrainingStepsOnStart: 0 # 2000

      knownBoundsType: FROM_VALUES

      gameBufferWritingFormat: ZIPPED_PROTOCOL_BUFFERS # alternative: ZIPPED_JSON

      # Gumbel MuZero parameters
      initialGumbelM: 8
      cVisit: 50  # 50 in paper
      cScale: 1.0  # 1.0 in paper

      numChannels: 256     # 256 in the paper
      numBottleneckChannels: 128

      numResiduals: 12
      broadcastEveryN: 8  # out of range here


      valueLossWeight: 1.0

      windowSize: 500

      numberOfTrainingSteps: 500
      #  numberOfEpisodesPerJVMStart: 40 # 50 would be ok

      numChannelsHiddenLayerSimilarity: 512
      numChannelsOutputLayerSimilarity: 1024

      playTypes:
        PLAYOUT:
          forTraining: false
          numSimulations: 3
          rootExplorationFraction: 0.0  # 0.0 means switched off
          temperatureRoot: 0.0
          gumbelActionSelection: false
        HYBRID:
          forTraining: true
          numEpisodes: 1
          numParallelGamesPlayed: 10
          tdSteps:  10000
          forTdStep0ValueTraining: false
          forTdStep0PolicyTraining: true
          numSimulations: 3
          numSimulationsHybrid: 3

          # dirichlet noise on root node helps to explore the game tree where the policy is temporarily underestimating some moves
          # dirichlet noise is added before mcts
          rootDirichletAlpha: 0.4
          rootExplorationFraction: 0.25  # 0.0 means switched off

          # temperatureRoot applies a temperature to the policy target after mcts and after storing it in game statistics but
          # before drawing the action from the policy target (a little different from the paper)
          # it helps to explore the game tree where the policy rules out bad moves and makes the agent blind to what could happen after such a move
          temperatureRoot: 2.0
          gumbelActionSelection: false

#        BEST_EFFORT:
#          forTraining: true
#          numEpisodes: 1
#          numParallelGamesPlayed: 500
#          tdSteps: 10000
#          numSimulations: 30
#          # dirichlet noise on root node helps to explore the game tree where the policy is temporarily underestimating some moves
#          # dirichlet noise is added before mcts
#          rootDirichletAlpha: 0.4
#          rootExplorationFraction: 0.25  # 0.0 means switched off
#          gumbelActionSelection: true

